{"version":3,"sources":["webpack:///./src/pages/news.js","webpack:///./src/utils/dao.js"],"names":["News","useState","response","setResponse","posts","setPosts","next","setNext","POST_PARAMS","limit","getPosts","fetch","getPostsUrl","then","data","console","log","useEffect","length","_links","total_posts","href","pageContext","map","post","key","imagePath","photos","alt_sizes","url","title","tags","text","htmlCaption","caption","words","replace","split","splice","join","ctaProps","to","id_string","slug","style","textAlign","type","gutter","left","right","onClick","API_KEY","params","api_key","POST_URL","Object","keys","encodeParams","endpoint","options","method","headers","window","ok","status","statusText","json","error","message","Promise","reject","catch"],"mappings":"2KA8EeA,UAhEF,WAAO,IAAD,EACeC,mBAAS,IAAlCC,EADU,KACAC,EADA,OAESF,mBAAS,IAA5BG,EAFU,KAEHC,EAFG,OAGOJ,mBAAS,IAA1BK,EAHU,KAGJC,EAHI,KAKXC,EAAc,CAClBC,MAAO,GAGHC,EAAW,SAACJ,GAChBK,YAAMC,YAAYJ,EAAaF,IAAOO,MAAK,SAACC,GAC1CC,QAAQC,IAAIF,EAAKZ,UACjBC,EAAYW,EAAKZ,cAsBrB,OAlBAe,qBAAU,WACRP,MACC,IAEHO,qBAAU,WACJf,GAAYA,EAASE,OAASF,EAASE,MAAMc,OAAS,GACxDb,EAAS,GAAD,mBAAKD,GAAL,YAAeF,EAASE,WAEjC,CAACF,IAEJe,qBAAU,WACJf,EAASiB,QAAUf,EAAMc,OAAShB,EAASkB,YAC7Cb,EAAQL,EAASiB,OAAOb,KAAKe,MAE7Bd,EAAQ,MAET,CAACH,IAGF,kBAAC,IAAD,CAAQkB,YAAaR,GACnB,kBAAC,IAAD,KACGV,EAAMmB,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,IAAD,CACEA,IAAKA,EACLC,UAAWF,EAAKG,QAAUH,EAAKG,OAAO,GAAGC,UAAU,GAAGC,IACtDC,MAAON,EAAKO,MAAQP,EAAKO,KAAK,GAC9BC,MA/CUC,EA+CYT,EAAKU,QA/CJC,EA+Ca,GA9CxBF,EAAYG,QAAQ,gBAAiB,IACtCC,MAAM,KAAKC,OAAO,EAAGH,GAAOI,KAAK,KA6CxC,OACJC,SAAU,CAAEC,GAAG,SAAUjB,EAAKkB,UAAhB,IAA6BlB,EAAKmB,QAhDvC,IAACV,EAAaE,KAoD1B7B,GACC,yBAAKsC,MAAO,CAAEC,UAAW,WACvB,kBAAC,IAAD,CACEC,KAAK,SACLC,OAAQ,CAAEC,KAAM,OAAQC,MAAO,QAC/BC,QAAS,WACPxC,EAASJ,KAJb,6B,kCC/DZ,wEACM6C,EAAU,qDAQHvC,EAAc,SAACwC,EAAa9C,GAGvC,YAHgD,IAAtB8C,MAAS,IACnCA,EAAOC,QAAUF,EAEV7C,EAAI,yBACoBA,EADpB,YACoC6C,EACtCG,gEAXiB,SAACF,GAC3B,YAD2C,IAAhBA,MAAS,IAC7BG,OAAOC,KAAKJ,GAClB7B,KAAI,SAAAE,GAAG,OAAOA,EAAP,IAAc2B,EAAO3B,MAC5Bc,KAAK,KAQekB,CAAaL,IAGvBzC,EAAQ,SAAC+C,EAAeC,GAMnC,YADI,IALgBD,MAAW,SAK3B,IAL+BC,MAAU,CAC7CC,OAAQ,MACRC,QAAS,CACL,eAAgB,qCAGbC,OAAOnD,MAAM+C,EAAUC,GAC3B9C,MAAK,SAACX,GAAc,IAEjB6D,EAIE7D,EAJF6D,GACAC,EAGE9D,EAHF8D,OACAC,EAEE/D,EAFF+D,WACApC,EACE3B,EADF2B,IAGF,GAAIkC,EACF,OAAO7D,EAASgE,OAGlB,IAAMC,EAAQ,CACZC,QAAYJ,EAAL,KAAgBC,EAAhB,yBAAmDpC,EAC1D3B,WACA8D,SACAC,cAGF,OAAOI,QAAQC,OAAOH,MAEvBI,OAAM,SAACJ,GACN,OAAOE,QAAQC,OAAOH,Q","file":"component---src-pages-news-js-f0360f4f704864e056b0.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetch, getPostsUrl } from '../utils/dao';\n\n// Components\nimport { Layout, Container, NewsCard, Button } from '../components';\n\n// Data\nimport data from '../data/pages/news.json';\n\nconst truncatePost = (htmlCaption, words) => {\n  const stringCaption = htmlCaption.replace(/(<([^>]+)>)/gi, '');\n  return stringCaption.split(' ').splice(0, words).join(' ');\n};\n\nconst News = () => {\n  const [response, setResponse] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [next, setNext] = useState('');\n\n  const POST_PARAMS = {\n    limit: 4,\n  };\n\n  const getPosts = (next) => {\n    fetch(getPostsUrl(POST_PARAMS, next)).then((data) => {\n      console.log(data.response);\n      setResponse(data.response);\n    });\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    if (response && response.posts && response.posts.length > 0) {\n      setPosts([...posts, ...response.posts]);\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (response._links && posts.length < response.total_posts) {\n      setNext(response._links.next.href);\n    } else {\n      setNext('');\n    }\n  }, [posts]);\n\n  return (\n    <Layout pageContext={data}>\n      <Container>\n        {posts.map((post, key) => (\n          <NewsCard\n            key={key}\n            imagePath={post.photos && post.photos[0].alt_sizes[3].url}\n            title={post.tags && post.tags[0]}\n            text={`${truncatePost(post.caption, 60)}...`}\n            ctaProps={{ to: `/post/${post.id_string}/${post.slug}` }}\n          />\n        ))}\n\n        {next && (\n          <div style={{ textAlign: 'center' }}>\n            <Button\n              type=\"button\"\n              gutter={{ left: 'auto', right: 'auto' }}\n              onClick={() => {\n                getPosts(next);\n              }}>\n              Load more news posts\n            </Button>\n          </div>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default News;\n","const POST_URL = 'https://api.tumblr.com/v2/blog/aristowealth.tumblr.com/posts';\nconst API_KEY = 'a9rmrkt46nr8csi1Fkp9VarPafZws8ZQJZyitfTtDWcwB5GhHe';\n\nexport const encodeParams = (params = {}) => {\n  return Object.keys(params)\n  .map(key => `${key}=${params[key]}`)\n  .join('&');\n};\n\nexport const getPostsUrl = (params = {}, next) => {\n  params.api_key = API_KEY;\n\n  return next\n      ? `https://api.tumblr.com${next}&api_key=${API_KEY}`\n      : `${POST_URL}?${encodeParams(params)}`;\n};\n\nexport const fetch = (endpoint = '', options = {\n  method: 'GET',\n  headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n  },\n}) => {\n  return window.fetch(endpoint, options)\n    .then((response) => {\n      const {\n        ok,\n        status,\n        statusText,\n        url,\n      } = response;\n\n      if (ok) {\n        return response.json();\n      }\n\n      const error = {\n        message: `${status}: ${statusText}, failure for call to ${url}`,\n        response,\n        status,\n        statusText,\n      };\n\n      return Promise.reject(error);\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n}"],"sourceRoot":""}