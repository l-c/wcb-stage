{"version":3,"sources":["webpack:///./src/pages/post.js","webpack:///./src/utils/dao.js"],"names":["Post","useState","post","setPost","POST_PARAMS","id","window","location","pathname","split","filter","Boolean","useEffect","fetch","getPostsUrl","then","results","response","posts","photos","data","content","hero","imagePath","alt_sizes","url","tags","title","Object","keys","length","pageContext","maxWidth","dangerouslySetInnerHTML","__html","caption","API_KEY","params","next","api_key","POST_URL","map","key","join","encodeParams","endpoint","options","method","headers","ok","status","statusText","json","error","message","Promise","reject","catch"],"mappings":"6FAAA,oEAgDeA,UAvCF,WAAO,IAAD,EACOC,mBAAS,IAA1BC,EADU,KACJC,EADI,KAGXC,EAAc,CAClBC,GACoB,oBAAXC,OACHA,OAAOC,SAASC,SAASC,MAAM,KAAKC,OAAOC,SAAS,GACpD,IAiBR,OAJAC,qBAAU,WATRC,YAAMC,YAAYV,IAAcW,MAAK,SAACC,GACpC,IAAId,EAAOc,EAAQC,SAASC,MAAM,GAC9BhB,EAAKiB,QAAUC,EAAKC,UACtBD,EAAKC,QAAQC,KAAKC,UAAYrB,EAAKiB,OAAO,GAAGK,UAAU,GAAGC,KACxDvB,EAAKwB,MAAQN,EAAKC,UAASD,EAAKC,QAAQC,KAAKK,MAAQzB,EAAKwB,KAAK,IACnEvB,EAAQD,QAMT,IAGD,oCACG0B,OAAOC,KAAK3B,GAAM4B,OAAS,GAC1B,kBAAC,IAAD,CAAQC,YAAaX,GACnB,kBAAC,IAAD,CAAWY,SAAS,SAClB,kBAAC,IAAD,KACE,yBAAKC,wBAAyB,CAAEC,OAAQhC,EAAKiC,iB,kCCvC3D,wEACMC,EAAU,qDAQHtB,EAAc,SAACuB,EAAaC,GAGvC,YAHgD,IAAtBD,MAAS,IACnCA,EAAOE,QAAUH,EAEVE,EAAI,yBACoBA,EADpB,YACoCF,EACtCI,gEAXiB,SAACH,GAC3B,YAD2C,IAAhBA,MAAS,IAC7BT,OAAOC,KAAKQ,GAClBI,KAAI,SAAAC,GAAG,OAAOA,EAAP,IAAcL,EAAOK,MAC5BC,KAAK,KAQeC,CAAaP,IAGvBxB,EAAQ,SAACgC,EAAeC,GAMnC,YADI,IALgBD,MAAW,SAK3B,IAL+BC,MAAU,CAC7CC,OAAQ,MACRC,QAAS,CACL,eAAgB,qCAGb1C,OAAOO,MAAMgC,EAAUC,GAC3B/B,MAAK,SAACE,GAAc,IAEjBgC,EAIEhC,EAJFgC,GACAC,EAGEjC,EAHFiC,OACAC,EAEElC,EAFFkC,WACA1B,EACER,EADFQ,IAGF,GAAIwB,EACF,OAAOhC,EAASmC,OAGlB,IAAMC,EAAQ,CACZC,QAAYJ,EAAL,KAAgBC,EAAhB,yBAAmD1B,EAC1DR,WACAiC,SACAC,cAGF,OAAOI,QAAQC,OAAOH,MAEvBI,OAAM,SAACJ,GACN,OAAOE,QAAQC,OAAOH,Q","file":"component---src-pages-post-js-ec58dd2f702194df9d10.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetch, getPostsUrl } from '../utils/dao';\n\n// Components\nimport { Layout, Container, NewsPost } from '../components';\n\n// Data\nimport data from '../data/pages/post.json';\n\nconst Post = () => {\n  const [post, setPost] = useState({});\n\n  const POST_PARAMS = {\n    id:\n      typeof window !== 'undefined'\n        ? window.location.pathname.split('/').filter(Boolean)[1]\n        : '',\n  };\n\n  const getPost = () => {\n    fetch(getPostsUrl(POST_PARAMS)).then((results) => {\n      let post = results.response.posts[0];\n      if (post.photos && data.content)\n        data.content.hero.imagePath = post.photos[0].alt_sizes[0].url;\n      if (post.tags && data.content) data.content.hero.title = post.tags[0];\n      setPost(post);\n    });\n  };\n\n  useEffect(() => {\n    getPost();\n  }, []);\n\n  return (\n    <>\n      {Object.keys(post).length > 0 && (\n        <Layout pageContext={data}>\n          <Container maxWidth=\"840px\">\n            <NewsPost>\n              <div dangerouslySetInnerHTML={{ __html: post.caption }} />\n            </NewsPost>\n          </Container>\n        </Layout>\n      )}\n    </>\n  );\n};\n\nexport default Post;\n","const POST_URL = 'https://api.tumblr.com/v2/blog/aristowealth.tumblr.com/posts';\nconst API_KEY = 'a9rmrkt46nr8csi1Fkp9VarPafZws8ZQJZyitfTtDWcwB5GhHe';\n\nexport const encodeParams = (params = {}) => {\n  return Object.keys(params)\n  .map(key => `${key}=${params[key]}`)\n  .join('&');\n};\n\nexport const getPostsUrl = (params = {}, next) => {\n  params.api_key = API_KEY;\n\n  return next\n      ? `https://api.tumblr.com${next}&api_key=${API_KEY}`\n      : `${POST_URL}?${encodeParams(params)}`;\n};\n\nexport const fetch = (endpoint = '', options = {\n  method: 'GET',\n  headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n  },\n}) => {\n  return window.fetch(endpoint, options)\n    .then((response) => {\n      const {\n        ok,\n        status,\n        statusText,\n        url,\n      } = response;\n\n      if (ok) {\n        return response.json();\n      }\n\n      const error = {\n        message: `${status}: ${statusText}, failure for call to ${url}`,\n        response,\n        status,\n        statusText,\n      };\n\n      return Promise.reject(error);\n    })\n    .catch((error) => {\n      return Promise.reject(error);\n    });\n}"],"sourceRoot":""}